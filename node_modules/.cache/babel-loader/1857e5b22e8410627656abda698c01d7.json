{"ast":null,"code":"var _jsxFileName = \"/Users/euno/Desktop/Git/ReactJS/reactJS_MovieChart/src/routes/Information.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\"; //component\n\nimport Header from '../components/Header'; //css\n\nimport '../css/Information.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Information() {\n  _s();\n\n  const [infoLoading, setInfoLoading] = useState(true); //const x = useParams();\n\n  const [movieInfo, setMovieInfo] = useState([]);\n  const {\n    id\n  } = useParams(); //console.log(x);\n\n  useEffect(() => {\n    fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`).then(info => info.json()).then(json => {\n      setMovieInfo(json.data.movie);\n      setInfoLoading(false);\n    });\n  }, []);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [ScrollY, setScrollY] = useState(0); // window 의 pageYOffset값을 저장\n\n  const [ScrollActive, setScrollActive] = useState(false);\n\n  function handleScroll() {\n    if (ScrollY > 40) {\n      setScrollY(window.pageYOffset);\n      setScrollActive(true);\n    } else {\n      setScrollY(window.pageYOffset);\n      setScrollActive(false);\n    }\n  }\n  /*\n  useEffect(() => {\n    function scrollListener() {\n      window.addEventListener(\"scroll\", handleScroll);\n    } //  window 에서 스크롤을 감시 시작\n    scrollListener(); // window 에서 스크롤을 감시\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }; //  window 에서 스크롤을 감시를 종료\n  });\n  */\n\n\n  console.log(movieInfo);\n  const cover = movieInfo.large_cover_image;\n  const genres = movieInfo.genres;\n  const year = movieInfo.year;\n  const rating = movieInfo.rating;\n  const description = movieInfo.description_full; //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Information\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"bg\",\n      src: movieInfo.background_image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), infoLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"infoLodingPic\",\n      children: \"\\u23F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: !ScrollActive ? \"info__cover\" : \"info__cover hidden\",\n        src: cover\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"infoBox__title\",\n            children: movieInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u2B50\\uFE0F \", rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"infoBox__ul\",\n          children: genres ? genres.slice(0, 3).map((g, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: g\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 73\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"infoBox__descrition\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Information, \"LcuLvDwTtdacX8ezgJdtOSh6f4A=\", false, function () {\n  return [useParams];\n});\n\n_c = Information;\nexport default Information;\n\nvar _c;\n\n$RefreshReg$(_c, \"Information\");","map":{"version":3,"sources":["/Users/euno/Desktop/Git/ReactJS/reactJS_MovieChart/src/routes/Information.js"],"names":["useEffect","useState","useParams","Header","Information","infoLoading","setInfoLoading","movieInfo","setMovieInfo","id","fetch","then","info","json","data","movie","scrollPosition","setScrollPosition","ScrollY","setScrollY","ScrollActive","setScrollActive","handleScroll","window","pageYOffset","console","log","cover","large_cover_image","genres","year","rating","description","description_full","background_image","title","slice","map","g","index"],"mappings":"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","sourcesContent":["import { useEffect, useState} from 'react';\nimport {useParams} from \"react-router-dom\";\n\n//component\nimport Header from '../components/Header';\n\n//css\nimport '../css/Information.css';\n\nfunction Information() {\n    \n\n\n    const [infoLoading, setInfoLoading] = useState(true);\n\n    //const x = useParams();\n    const [movieInfo, setMovieInfo] = useState([]);\n    const { id } = useParams();\n    //console.log(x);\n\n\n    useEffect(() => {\n        fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n            .then((info) => (info.json()))\n            .then((json) => {\n                setMovieInfo(json.data.movie);\n                setInfoLoading(false);\n            });\n    }, []);\n\n\n    const [scrollPosition, setScrollPosition] = useState(0);\n  \n    const [ScrollY, setScrollY] = useState(0); // window 의 pageYOffset값을 저장\n    const [ScrollActive, setScrollActive] = useState(false);\n    \n    function handleScroll() {\n      if (ScrollY > 40) {\n        setScrollY(window.pageYOffset);\n        setScrollActive(true);\n      } else {\n        setScrollY(window.pageYOffset);\n        setScrollActive(false);\n      }\n    }\n    /*\n    useEffect(() => {\n      function scrollListener() {\n        window.addEventListener(\"scroll\", handleScroll);\n      } //  window 에서 스크롤을 감시 시작\n      scrollListener(); // window 에서 스크롤을 감시\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      }; //  window 에서 스크롤을 감시를 종료\n    });\n    */\n\n\n\n\n\n    console.log(movieInfo);\n    const cover = movieInfo.large_cover_image;\n    const genres = movieInfo.genres;\n    const year = movieInfo.year;\n    const rating = movieInfo.rating;\n    const description = movieInfo.description_full;\n//\n    return (\n        <div className='Information'>\n            {<Header />}\n            <img className='bg' src={movieInfo.background_image}/>\n            \n\n            {infoLoading ? \n            <span className='infoLodingPic'>⏳</span> : \n            <div>\n                <img \n                \n                className={!ScrollActive ? \"info__cover\" : \"info__cover hidden\"} src={cover}/>\n                <div className='infoBox'>\n                        <div>\n                            <span className='infoBox__title'>{movieInfo.title}</span>\n                        </div>\n                        <div>\n                            <span>{year}</span>\n                            <span>⭐️ {rating}</span>                    \n                        </div>\n                        <ul className='infoBox__ul'>\n                        {genres ? genres.slice(0, 3).map((g, index) => (<li key={index}>{g}</li>))\n                            : null}\n                        </ul>\n                        <p className='infoBox__descrition'>{description}</p>\n                </div>\n            </div>}\n        </div>);\n    \n}\nexport default Information;\n"]},"metadata":{},"sourceType":"module"}