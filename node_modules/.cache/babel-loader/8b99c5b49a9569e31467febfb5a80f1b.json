{"ast":null,"code":"var _jsxFileName = \"/Users/euno/Desktop/Nomad-Coder/react-03/src/Movie.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//상위 컴포넌트 [App.js]로 부터 파라미터의 값을 받아와야한다 -> props\nfunction Movie(cover, id, title, rating, genres) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [title, \" [\", rating, \"]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), cover ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n/*<p>{summary}</p>\n<ul>\n                {genres ? genres.map((g) => (<li key={getComputedStyle}>{g}</li>)) : null}\n            </ul>\n            */\n\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/euno/Desktop/Nomad-Coder/react-03/src/Movie.js"],"names":["Movie","cover","id","title","rating","genres"],"mappings":";;;AAAA;AAEA,SAASA,KAAT,CAAeC,KAAf,EAAsBC,EAAtB,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAyCC,MAAzC,EAAiD;AAC7C,sBACI;AAAA,4BACI;AAAA,iBAAKF,KAAL,QAAcC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKH,KAAK,gBAAG;AAAK,MAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,YAAH,GAA8B,IAFxC,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAAUC,EAAV;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;AACD;AACA;AACA;AACA;AACA;;;KAbSF,K;AAgBT,eAAeA,KAAf","sourcesContent":["//상위 컴포넌트 [App.js]로 부터 파라미터의 값을 받아와야한다 -> props\n\nfunction Movie(cover, id, title, rating, genres) {\n    return (\n        <div key={id}>\n            <h2>{title} [{rating}]</h2>\n            {cover ? <img src={cover} ></img> : null}\n\n            <hr></hr>\n        </div>)\n}\n/*<p>{summary}</p>\n<ul>\n                {genres ? genres.map((g) => (<li key={getComputedStyle}>{g}</li>)) : null}\n            </ul>\n            */\n\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}