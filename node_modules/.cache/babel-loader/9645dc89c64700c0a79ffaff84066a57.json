{"ast":null,"code":"var _jsxFileName = \"/Users/euno/Desktop/Nomad-Coder/react-03/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Movie from './components/Movie.js';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]); //api로 정보를 불러온 후 json으로 변경, json 파일을 state로 사용한다\n  //arrow function, async, await을 사용, 코드 줄여서 쓰는 경우, 왜 사용할까?\n\n  const getMovies = async () => {\n    const json = await (await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year')).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  /* arrow function, async, await을 사용\n  const getMovies = async () => {\n    const response = await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year');\n    const json = await response.json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  */\n\n  /* then 사용\n  const getMovies = () => {\n    fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.0&sort_by=year')\n    .then((response) => response.json())\n    .then((json) => {\n      setMovies(json.data.movies);\n      setLoading(false);\n    });\n  };\n  */\n\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(item => /*#__PURE__*/_jsxDEV(Movie, {\n        cover: item.medium_cover_image,\n        id: item.id,\n        title: item.title,\n        rating: item.rating,\n        genres: item.genres,\n        summary: item.summary\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/euno/Desktop/Nomad-Coder/react-03/src/App.js"],"names":["logo","Movie","useEffect","useState","App","loading","setLoading","movies","setMovies","getMovies","json","fetch","data","console","log","map","item","medium_cover_image","id","title","rating","genres","summary"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAFa,CAIb;AACA;;AACA,QAAMM,SAAS,GAAG,YAAY;AAC5B,UAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CAAC,wEAAD,CADM,EAEhBD,IAFgB,EAAnB;AAGAF,IAAAA,SAAS,CAACE,IAAI,CAACE,IAAL,CAAUL,MAAX,CAAT;AACAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAND;AAQA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGEJ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGF,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAEN;AAAA,gBACGE,MAAM,CAACQ,GAAP,CAAYC,IAAD,iBACV,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEA,IAAI,CAACC,kBAFd;AAGE,QAAA,EAAE,EAAED,IAAI,CAACE,EAHX;AAIE,QAAA,KAAK,EAAEF,IAAI,CAACG,KAJd;AAKE,QAAA,MAAM,EAAEH,IAAI,CAACI,MALf;AAME,QAAA,MAAM,EAAEJ,IAAI,CAACK,MANf;AAOE,QAAA,OAAO,EAAEL,IAAI,CAACM;AAPhB,SACON,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA3DQd,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Movie from './components/Movie.js';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  //api로 정보를 불러온 후 json으로 변경, json 파일을 state로 사용한다\n  //arrow function, async, await을 사용, 코드 줄여서 쓰는 경우, 왜 사용할까?\n  const getMovies = async () => {\n    const json = await (\n      await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year'))\n      .json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n\n  /* arrow function, async, await을 사용\n  const getMovies = async () => {\n    const response = await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year');\n    const json = await response.json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  */\n\n  /* then 사용\n  const getMovies = () => {\n    fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.0&sort_by=year')\n    .then((response) => response.json())\n    .then((json) => {\n      setMovies(json.data.movies);\n      setLoading(false);\n    });\n  };\n  */\n\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  console.log(movies);\n\n  return (\n    <div className=\"App\">\n      {loading ?\n        <h1>loading</h1> :\n        <div>\n          {movies.map((item) =>\n            <Movie\n              key={item.id}\n              cover={item.medium_cover_image}\n              id={item.id}\n              title={item.title}\n              rating={item.rating}\n              genres={item.genres}\n              summary={item.summary} />)}\n        </div>\n      }\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}