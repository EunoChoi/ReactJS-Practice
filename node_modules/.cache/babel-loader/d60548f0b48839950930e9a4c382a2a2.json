{"ast":null,"code":"var _jsxFileName = \"/Users/euno/Desktop/Nomad-Coder/react-03/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  const getMovies = async () => {\n    const json = await (await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year')).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  /*\n  const getMovies = async () => {\n    const response = await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year');\n    const json = await response.json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  */\n\n\n  useEffect(() => {\n    /* using 'then'\n    fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year')\n      .then((response) => response.json())\n      .then((json) => {\n        setMovies(json.data.movies);\n        setLoading(false);\n      });\n    */\n    getMovies();\n  }, []);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 64\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/euno/Desktop/Nomad-Coder/react-03/src/App.js"],"names":["logo","useEffect","useState","App","loading","setLoading","movies","setMovies","getMovies","json","fetch","data","console","log","map","item","title"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMM,SAAS,GAAG,YAAY;AAC5B,UAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CAAC,wEAAD,CADM,EAEhBD,IAFgB,EAAnB;AAGAF,IAAAA,SAAS,CAACE,IAAI,CAACE,IAAL,CAAUL,MAAX,CAAT;AACAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAND;AAQA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGEJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIO,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAWAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGF,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAsB;AAAA,gBAAME,MAAM,CAACQ,GAAP,CAAYC,IAAD,iBAAU;AAAA,kBAAOA,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAArB;AAAN;AAAA;AAAA;AAAA;AAAA;AADhC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxCQb,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  const getMovies = async () => {\n    const json = await (\n      await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year'))\n      .json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n\n  /*\n  const getMovies = async () => {\n    const response = await fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year');\n    const json = await response.json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  */\n\n\n  useEffect(() => {\n    /* using 'then'\n    fetch('https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year')\n      .then((response) => response.json())\n      .then((json) => {\n        setMovies(json.data.movies);\n        setLoading(false);\n      });\n    */\n    getMovies();\n  }, []);\n  console.log(movies);\n\n  return (\n    <div className=\"App\">\n      {loading ? <h1>loading</h1> : <div>{movies.map((item) => <span>{item.title}</span>)}</div>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}